syntax = "proto3";
import "google/protobuf/wrappers.proto";
import "com/coralogix/tracing/v1/audit_log.proto";
import "com/coralogix/tracing/v1/span.proto";
import "com/coralogix/tracing/v1/trace.proto";
import "com/coralogix/tracing/v1/trace_query.proto";
package com.coralogix.tracing.v1;

message GetTraceRequest {
    google.protobuf.StringValue trace_id = 1; // required
}

message GetTraceResponse {
    google.protobuf.StringValue trace_id = 1;
    repeated Span spans = 2;
}

message GetTracesRequest {
    TracingQuery query = 1;
}

message GetTracesResponse {
    google.protobuf.Int64Value count = 1;
    repeated Trace traces = 2;
}

message GetCachedTraceQueryRequest {
    google.protobuf.StringValue query_id = 1;
}

message GetCachedTraceQueryResponse {
    TracingQuery query = 1;
}

message GetTraceFiltersRequest {
    TracingQuery query = 1;
}

message GetTraceFiltersResponse {
    repeated MetadataFilterField metadata_filters = 1;
    repeated TagFilterField tag_filters = 2;
}

service TracingService {
    rpc GetTrace(GetTraceRequest) returns (GetTraceResponse) {
        option (audit_log_description).description = "get trace";
    }
}
